# This is a basic workflow to help you get started with Actions
name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  duplo_host: https://test01.duplocloud.net  # CHANGE ME!
  duplo_token: "${{ secrets.DUPLO_TOKEN }}"
  SERVICE_NAME: mynodejs                      # CHANGE ME!
  TENANT_NAME: raghavan01                       # CHANGE ME!
  BASE_API_URL: https://myurl1
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  envbranch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Check the branch and select the envirnoment
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "env_name=dev" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/qa" ]; then    
            echo "env_name=qa" >> $GITHUB_OUTPUT
          fi
            
      - name: Use variable setup in previous step
        run: echo "Using envirnoment ${{ steps.branch_check.outputs.env_name }}"
        
  build:
    runs-on: ubuntu-latest
    needs: envbranch
    # Setting the envirnoment needed
    environment:
      name: ${{ needs.envbranch.branch_check.outputs.env_name }}
      
    steps:
      - name: Envirnoment that would be used
        run: echo "Using envirnoment ${{ needs.envbranch.outputs.env_name }}"
        
      - name: Checkout
        uses: actions/checkout@v2

      # Set up for docker build
      - name: Get AWS credentials
        uses: duplocloud/ghactions-aws-jit@master
        with:
          tenant: default
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Url update
        run: |
          cat  ./src/services/config.js
          sed -i "s|{{API_URL}}|${{ env.BASE_API_URL }}|g" ./src/services/config.js
          cat  ./src/services/config.js 
      # Build and push the docker image
      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
            
    # This part is important - it will be used by the deploy job
    outputs:
      image: "${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Update the backend service to use the new image.
      - name: Deploy
        uses: duplocloud/ghactions-service-update@master
        with:
          tenant: "${{ env.TENANT_NAME }}"
          services: |-
            [
              { "Name": "${{ env.SERVICE_NAME }}", "Image": "${{ needs.build.outputs.image }}" }
            ]

  copys3:
    name: Deploy to dev
    needs: [build, deploy]
    uses: ./.github/workflows/duplo_deployment.yml
    with:
      api_url: https://api_url
      app_url: https://app_url
      duplo_tenant: raghavan01
      react_app_stage: development
      cloudfront_distribution_id: E1QGIWKA2DZY0A
      target_s3_bucket: duploservices-raghavan01-s3app1-386269687991
    secrets:
      duplo_host: https://test01.duplocloud.net
      duplo_token: ${{ secrets.DUPLO_TOKEN }}
